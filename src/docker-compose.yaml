version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres_container
    environment:
      POSTGRES_DB: exampleapp
      POSTGRES_USER: exampleuser
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "0.0.0.0:5432:5432" # bind to host for populating scripts
    volumes:
      - /var/lib/postgresql/data/pgdata:/var/lib/postgresql/data/pgdata
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - example_network 

  login-service:
    build: ./login/
    container_name: login_container
    command: app:app --host 0.0.0.0 --port 5000 --reload
    ports:
      - "5000:5000"
    volumes:
      - ./login/:/app
    networks:
      - example_network

  user-service:
    build: ./user/
    container_name: user_container
    command: app:app --host 0.0.0.0 --port 5001 --reload
    depends_on:
      - postgres
    ports:
      - "5001:5001"
    volumes:
      - ./user/:/app
    networks:
      - example_network

  product-service:
    build: ./product/
    container_name: product_container
    command: app:app --host 0.0.0.0 --port 5002 --reload
    depends_on:
      - postgres
    ports:
      - "5002:5002"
    volumes:
      - ./product/:/app
    networks:
      - example_network

  order-service:
    build: ./order/
    container_name: order_container
    command: app:app --host 0.0.0.0 --port 5003 --reload
    depends_on:
      - postgres
    ports:
      - "5003:5003"
    volumes:
      - ./order/:/app
    networks:
      - example_network

  frontend-service:
    build: ./frontend/
    container_name: frontend_container
    command: app:app --host 0.0.0.0 --port 5100 --reload
    depends_on:
      - user-service
      - product-service
      - order-service
    ports:
      - "5100:5100"
    volumes:
      - ./frontend/:/app
    networks:
      - example_network

networks:
  example_network:
    driver: bridge
